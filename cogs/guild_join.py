# cogs/guild_join_notifier.py
from __future__ import annotations

import asyncio
import disnake
from disnake.ext import commands
from datetime import datetime, timezone


class GuildJoinNotifier(commands.Cog):
    """
    –ü—Ä–∏ –≤—Ö–æ–¥–µ –±–æ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä:
      ‚Ä¢ –∏—â–µ–º –≤ –∞—É–¥–∏—Ç-–ª–æ–≥–µ, –∫—Ç–æ –¥–æ–±–∞–≤–∏–ª –±–æ—Ç–∞ (AuditLogAction.bot_add)
      ‚Ä¢ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç–º–±–µ–¥ –≤ –õ–° –¥–æ–±–∞–≤–∏–≤—à–µ–º—É –∏ –æ–≤–Ω–µ—Ä—É (–µ—Å–ª–∏ —ç—Ç–æ —Ä–∞–∑–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏)
    """

    def __init__(self, bot: commands.Bot):
        self.bot = bot

    @commands.Cog.listener()
    async def on_guild_join(self, guild: disnake.Guild):
        await asyncio.sleep(2)  # –Ω–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, —á—Ç–æ–±—ã –∞—É–¥–∏—Ç-–ª–æ–≥ —É—Å–ø–µ–ª –∑–∞–ø–∏—Å–∞—Ç—å—Å—è

        adder = await self._try_get_adder(guild)
        owner = guild.owner

        # —Ñ–æ—Ä–º–∏—Ä—É–µ–º —ç–º–±–µ–¥ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
        embed = disnake.Embed(
            title="üëã –°–ø–∞—Å–∏–±–æ –∑–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞!",
            description=(
                f"–°–µ—Ä–≤–µ—Ä: **{guild.name}** (`{guild.id}`)\n\n"
                "–ß—Ç–æ–±—ã –≤—Å—ë –∑–∞—Ä–∞–±–æ—Ç–∞–ª–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, —Å–¥–µ–ª–∞–π—Ç–µ 2 —à–∞–≥–∞:\n"
                "1) **–í—ã–¥–∞–π—Ç–µ –±–æ—Ç—É —Ä–æ–ª—å —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞** –∏ –ø–æ–¥–Ω–∏–º–∏—Ç–µ –µ—ë **–≤—ã—à–µ** –≤—Å–µ—Ö —Ä–æ–ª–µ–π, "
                "–∫–æ—Ç–æ—Ä—ã–µ –≤—ã –±—É–¥–µ—Ç–µ —É–∫–∞–∑—ã–≤–∞—Ç—å –≤ –∫–æ–Ω—Ñ–∏–≥–µ (–∏–Ω–∞—á–µ —É –±–æ—Ç–∞ –º–æ–≥—É—Ç –±—ã—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –ø—Ä–∞–≤–∞–º).\n"
                "2) –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É **`/config`** –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏ **–∑–∞–ø–æ–ª–Ω–∏—Ç–µ** –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.\n\n"
                "–ü–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥–∞ ‚Äî –º–æ–∂–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º —Å—Ä–∞–∑—É —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É **`/close create`**."
            ),
            timestamp=datetime.now(timezone.utc),
        )
        embed.set_footer(text="–ï—Å–ª–∏ –õ–° –∑–∞–∫—Ä—ã—Ç—ã ‚Äî –æ—Ç–∫—Ä–æ–π—Ç–µ –∏—Ö –Ω–∞ –≤—Ä–µ–º—è, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.")

        # –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ –õ–° –¥–æ–±–∞–≤–∏–≤—à–µ–º—É
        if adder:
            await self._safe_dm(adder, embed)

        # –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ–≤–Ω–µ—Ä—É (–µ—Å–ª–∏ –æ–Ω –Ω–µ —Ç–æ—Ç –∂–µ —á–µ–ª–æ–≤–µ–∫ –∏ –Ω–µ None)
        if owner and (not adder or owner.id != adder.id):
            await self._safe_dm(owner, embed)

    async def _try_get_adder(self, guild: disnake.Guild) -> disnake.Member | None:
        """
        –ü—ã—Ç–∞–µ—Ç—Å—è –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –¥–æ–±–∞–≤–∏–≤—à–µ–≥–æ –±–æ—Ç–∞, —á–µ—Ä–µ–∑ –∞—É–¥–∏—Ç-–ª–æ–≥.
        –¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ View Audit Log —É –±–æ—Ç–∞. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç Member –∏–ª–∏ None.
        """
        try:
            if not guild.me.guild_permissions.view_audit_log:
                return None

            # –∏–Ω–æ–≥–¥–∞ —Å–æ–±—ã—Ç–∏–µ –ø–∏—à–µ—Çc—è –Ω–µ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ ‚Äî –ø–æ–ø—Ä–æ–±—É–µ–º –ø–∞—Ä—É –ø–æ–ø—ã—Ç–æ–∫
            for _ in range(3):
                async for entry in guild.audit_logs(
                    limit=5,
                    action=disnake.AuditLogAction.bot_add
                ):
                    # target ‚Äî —ç—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π –±–æ—Ç; –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –º—ã
                    if getattr(entry.target, "id", None) == self.bot.user.id:
                        user = entry.user
                        # –≤–µ—Ä–Ω—É—Ç—å Member (–∞ –Ω–µ User), –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ
                        if isinstance(user, disnake.Member):
                            return user
                        try:
                            return await guild.fetch_member(user.id)
                        except Exception:
                            return guild.get_member(user.id)
                await asyncio.sleep(1)
        except Exception as e:
            print(f"[GuildJoinNotifier] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞—É–¥–∏—Ç-–ª–æ–≥ –Ω–∞ {guild.id}: {e}")
        return None

    async def _safe_dm(self, member: disnake.abc.User, embed: disnake.Embed):
        try:
            await member.send(embed=embed)
        except Exception as e:
            # –õ–° –∑–∞–∫—Ä—ã—Ç—ã, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
            print(f"[GuildJoinNotifier] –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–° {getattr(member, 'id', '?')}: {e}")


def setup(bot: commands.Bot):
    bot.add_cog(GuildJoinNotifier(bot))
